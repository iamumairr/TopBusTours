// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TopBusToursLondon_Business.Data;

#nullable disable

namespace TopBusToursLondon_Business.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("TicketId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TourId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("TourId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Highlight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("TourId");

                    b.ToTable("Highlights");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Newsletters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Newsletters");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RouteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("TourId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AdultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChildPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FamilyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnOffer")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OfferAdultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OfferChildPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OfferFamilyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TicketImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.TicketSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketSchedules");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Feature", b =>
                {
                    b.HasOne("TopBusToursLondon_Model.Models.Ticket", "Ticket")
                        .WithMany("Features")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopBusToursLondon_Model.Models.Tour", "Tour")
                        .WithMany("Features")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Highlight", b =>
                {
                    b.HasOne("TopBusToursLondon_Model.Models.Ticket", "Ticket")
                        .WithMany("Highlights")
                        .HasForeignKey("TicketId");

                    b.HasOne("TopBusToursLondon_Model.Models.Tour", "Tour")
                        .WithMany("Highlights")
                        .HasForeignKey("TourId");

                    b.Navigation("Ticket");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Route", b =>
                {
                    b.HasOne("TopBusToursLondon_Model.Models.Ticket", "Ticket")
                        .WithMany("Routes")
                        .HasForeignKey("TicketId");

                    b.HasOne("TopBusToursLondon_Model.Models.Tour", "Tour")
                        .WithMany("Routes")
                        .HasForeignKey("TourId");

                    b.Navigation("Ticket");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Ticket", b =>
                {
                    b.HasOne("TopBusToursLondon_Model.Models.Tour", "Tour")
                        .WithMany("Tickets")
                        .HasForeignKey("TourId");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.TicketSchedule", b =>
                {
                    b.HasOne("TopBusToursLondon_Model.Models.Schedule", "Schedule")
                        .WithMany("TicketSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopBusToursLondon_Model.Models.Ticket", "Ticket")
                        .WithMany("TicketSchedules")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Tour", b =>
                {
                    b.HasOne("TopBusToursLondon_Model.Models.Category", "Category")
                        .WithMany("Tours")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Category", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Schedule", b =>
                {
                    b.Navigation("TicketSchedules");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Ticket", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Highlights");

                    b.Navigation("Routes");

                    b.Navigation("TicketSchedules");
                });

            modelBuilder.Entity("TopBusToursLondon_Model.Models.Tour", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Highlights");

                    b.Navigation("Routes");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
